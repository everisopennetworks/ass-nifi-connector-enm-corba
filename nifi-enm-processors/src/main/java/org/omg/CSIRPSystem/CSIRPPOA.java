package org.omg.CSIRPSystem;


/**
* org.omg.CSIRPSystem/CSIRPPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from org.omg.CSIRPSystem.idl
* jueves 5 de septiembre de 2019 02:17:03 AM CDT
*/

public abstract class CSIRPPOA extends org.omg.PortableServer.Servant
 implements CSIRPOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("get_heartbeat_period", new Integer (0));
    _methods.put ("set_heartbeat_period", new Integer (1));
    _methods.put ("trigger_heartbeat", new Integer (2));
    _methods.put ("get_CS_IRP_versions", new Integer (3));
    _methods.put ("get_CS_IRP_operations_profile", new Integer (4));
    _methods.put ("get_CS_IRP_notification_profile", new Integer (5));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    Integer __method = (Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /**
     * IRPManager invokes this operation to obtain the current 
     * heartbeat period.
     */
       case 0:  // org.omg.CSIRPSystem/CSIRP/get_heartbeat_period
       {
         try {
           org.omg.CORBA.ShortHolder heartbeatPeriod = new org.omg.CORBA.ShortHolder ();
           org.omg.CSIRPConstDefs.ResultType $result = null;
           $result = this.get_heartbeat_period (heartbeatPeriod);
           out = $rh.createReply();
           org.omg.CSIRPConstDefs.ResultTypeHelper.write (out, $result);
           org.omg.CSIRPConstDefs.HeartbeatPeriodTypeHelper.write (out, heartbeatPeriod.value);
         } catch (GetHeartbeatPeriod $ex) {
           out = $rh.createExceptionReply ();
           GetHeartbeatPeriodHelper.write (out, $ex);
         }
         break;
       }


  /**
     * IRPManager invokes this operation to set the heartbeatPeriod.
     * If the heartbeatPeriod is modified by one IRPManager, a
     * notifyHeartbeat notification should be emitted
     * immediately to all the subscribed IRPManagers to indicate
     * the new heartbeatPeriod. If the heartbeatPeriod is set to
     * zero, one notifyHeartbeat notification will be
     * emitted immediately and no more 
     * notifications unless the heartbeatPeriod is modified again.
     */
       case 1:  // org.omg.CSIRPSystem/CSIRP/set_heartbeat_period
       {
         try {
           short heartbeatPeriod = org.omg.CSIRPConstDefs.HeartbeatPeriodTypeHelper.read (in);
           org.omg.CSIRPConstDefs.ResultType $result = null;
           $result = this.set_heartbeat_period (heartbeatPeriod);
           out = $rh.createReply();
           org.omg.CSIRPConstDefs.ResultTypeHelper.write (out, $result);
         } catch (SetHeartbeatPeriod $ex) {
           out = $rh.createExceptionReply ();
           SetHeartbeatPeriodHelper.write (out, $ex);
         } catch (ConflictingHeartbeatPeriod $ex) {
           out = $rh.createExceptionReply ();
           ConflictingHeartbeatPeriodHelper.write (out, $ex);
         } catch (InvalidHeartbeatPeriod $ex) {
           out = $rh.createExceptionReply ();
           InvalidHeartbeatPeriodHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.ValueNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.ValueNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.OperationNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.write (out, $ex);
         }
         break;
       }


  /*
     * IRPManager invoke this operation to trigger ET_HEARTBEAT 
     * notification positively.
     */
       case 2:  // org.omg.CSIRPSystem/CSIRP/trigger_heartbeat
       {
         try {
           String managerIdentifier = org.omg.CSIRPConstDefs.ManagerIdentifierTypeHelper.read (in);
           org.omg.CSIRPConstDefs.ResultType $result = null;
           $result = this.trigger_heartbeat (managerIdentifier);
           out = $rh.createReply();
           org.omg.CSIRPConstDefs.ResultTypeHelper.write (out, $result);
         } catch (TriggerHeartbeat $ex) {
           out = $rh.createExceptionReply ();
           TriggerHeartbeatHelper.write (out, $ex);
         } catch (InvalidManagerIdentifier $ex) {
           out = $rh.createExceptionReply ();
           InvalidManagerIdentifierHelper.write (out, $ex);
         }
         break;
       }


  /**
     * Return the list of all supported CSIRP versions.
     */
       case 3:  // org.omg.CSIRPSystem/CSIRP/get_CS_IRP_versions
       {
         try {
           String $result[] = null;
           $result = this.get_CS_IRP_versions ();
           out = $rh.createReply();
           org.omg.ManagedGenericIRPConstDefs.VersionNumberSetHelper.write (out, $result);
         } catch (GetCSIRPVersions $ex) {
           out = $rh.createExceptionReply ();
           GetCSIRPVersionsHelper.write (out, $ex);
         }
         break;
       }


  /**
     * Return the list of all supported operations and their supported
     * parameters for a specific CSIRP version.
     */
       case 4:  // org.omg.CSIRPSystem/CSIRP/get_CS_IRP_operations_profile
       {
         try {
           String iRPVersion = org.omg.ManagedGenericIRPConstDefs.VersionNumberHelper.read (in);
           org.omg.ManagedGenericIRPConstDefs.Method $result[] = null;
           $result = this.get_CS_IRP_operations_profile (iRPVersion);
           out = $rh.createReply();
           org.omg.ManagedGenericIRPConstDefs.MethodListHelper.write (out, $result);
         } catch (GetCSIRPOperationsProfile $ex) {
           out = $rh.createExceptionReply ();
           GetCSIRPOperationsProfileHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.OperationNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.InvalidParameter $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.write (out, $ex);
         }
         break;
       }


  /**
     * Return the list of all supported notifications and their supported
     * parameters for a specific CSIRP version.
     */
       case 5:  // org.omg.CSIRPSystem/CSIRP/get_CS_IRP_notification_profile
       {
         try {
           String iRPVersion = org.omg.ManagedGenericIRPConstDefs.VersionNumberHelper.read (in);
           org.omg.ManagedGenericIRPConstDefs.Method $result[] = null;
           $result = this.get_CS_IRP_notification_profile (iRPVersion);
           out = $rh.createReply();
           org.omg.ManagedGenericIRPConstDefs.MethodListHelper.write (out, $result);
         } catch (GetCSIRPNotificationProfile $ex) {
           out = $rh.createExceptionReply ();
           GetCSIRPNotificationProfileHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.OperationNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.InvalidParameter $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:3gppsa5.org/CSIRPSystem/CSIRP:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public CSIRP _this() 
  {
    return CSIRPHelper.narrow(
    super._this_object());
  }

  public CSIRP _this(org.omg.CORBA.ORB orb) 
  {
    return CSIRPHelper.narrow(
    super._this_object(orb));
  }


} // class CSIRPPOA
