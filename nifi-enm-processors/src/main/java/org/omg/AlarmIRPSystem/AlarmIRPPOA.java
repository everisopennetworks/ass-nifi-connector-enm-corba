package org.omg.AlarmIRPSystem;


/**
* org.omg.AlarmIRPSystem/AlarmIRPPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from org.omg.AlarmIRPSystem.idl
* jueves 5 de septiembre de 2019 01:52:14 AM CDT
*/

public abstract class AlarmIRPPOA extends org.omg.PortableServer.Servant
 implements AlarmIRPOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("get_alarm_IRP_versions", new Integer (0));
    _methods.put ("get_alarm_IRP_operations_profile", new Integer (1));
    _methods.put ("get_alarm_IRP_notification_profile", new Integer (2));
    _methods.put ("acknowledge_alarms", new Integer (3));
    _methods.put ("unacknowledge_alarms", new Integer (4));
    _methods.put ("comment_alarms", new Integer (5));
    _methods.put ("clear_alarms", new Integer (6));
    _methods.put ("get_alarm_list", new Integer (7));
    _methods.put ("get_alarm_count", new Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    Integer __method = (Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /*
      Return the list of all supported Alarm IRP versions.
      Implementations are to provide a return value consisting of one or more
      IRPVersions.
      Each IRPVersion is defined by the rule in the clause titled
      "IRP document version number string"
      */
       case 0:  // org.omg.AlarmIRPSystem/AlarmIRP/get_alarm_IRP_versions
       {
         try {
           String $result[] = null;
           $result = this.get_alarm_IRP_versions ();
           out = $rh.createReply();
           org.omg.ManagedGenericIRPConstDefs.VersionNumberSetHelper.write (out, $result);
         } catch (GetAlarmIRPVersions $ex) {
           out = $rh.createExceptionReply ();
           GetAlarmIRPVersionsHelper.write (out, $ex);
         }
         break;
       }


  /*
      Return the list of all supported operations and their supported
      parameters for a specific Alarm IRP version.
      */
       case 1:  // org.omg.AlarmIRPSystem/AlarmIRP/get_alarm_IRP_operations_profile
       {
         try {
           String alarm_irp_version = org.omg.ManagedGenericIRPConstDefs.VersionNumberHelper.read (in);
           org.omg.ManagedGenericIRPConstDefs.Method $result[] = null;
           $result = this.get_alarm_IRP_operations_profile (alarm_irp_version);
           out = $rh.createReply();
           org.omg.ManagedGenericIRPConstDefs.MethodListHelper.write (out, $result);
         } catch (GetAlarmIRPOperationsProfile $ex) {
           out = $rh.createExceptionReply ();
           GetAlarmIRPOperationsProfileHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.OperationNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.InvalidParameter $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.write (out, $ex);
         }
         break;
       }


  /*
      Return the list of all supported notifications and their supported
      parameters for a specific Alarm IRP version.
      */
       case 2:  // org.omg.AlarmIRPSystem/AlarmIRP/get_alarm_IRP_notification_profile
       {
         try {
           String alarm_irp_version = org.omg.ManagedGenericIRPConstDefs.VersionNumberHelper.read (in);
           org.omg.ManagedGenericIRPConstDefs.Method $result[] = null;
           $result = this.get_alarm_IRP_notification_profile (alarm_irp_version);
           out = $rh.createReply();
           org.omg.ManagedGenericIRPConstDefs.MethodListHelper.write (out, $result);
         } catch (GetAlarmIRPNotificationProfile $ex) {
           out = $rh.createExceptionReply ();
           GetAlarmIRPNotificationProfileHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.OperationNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.InvalidParameter $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.write (out, $ex);
         }
         break;
       }


  /*
      Request to acknowledge one or more alarms.
      */
       case 3:  // org.omg.AlarmIRPSystem/AlarmIRP/acknowledge_alarms
       {
         try {
           org.omg.AlarmIRPConstDefs.AlarmInformationIdAndSev alarm_information_id_and_sev_list[] = org.omg.AlarmIRPConstDefs.AlarmInformationIdAndSevSeqHelper.read (in);
           String ack_user_id = in.read_string ();
           org.omg.ManagedGenericIRPConstDefs.StringTypeOpt ack_system_id = org.omg.ManagedGenericIRPConstDefs.StringTypeOptHelper.read (in);
           org.omg.AlarmIRPConstDefs.BadAcknowledgeAlarmInfoSeqHolder bad_ack_alarm_info_list = new org.omg.AlarmIRPConstDefs.BadAcknowledgeAlarmInfoSeqHolder ();
           org.omg.ManagedGenericIRPConstDefs.Signal $result = null;
           $result = this.acknowledge_alarms (alarm_information_id_and_sev_list, ack_user_id, ack_system_id, bad_ack_alarm_info_list);
           out = $rh.createReply();
           org.omg.ManagedGenericIRPConstDefs.SignalHelper.write (out, $result);
           org.omg.AlarmIRPConstDefs.BadAcknowledgeAlarmInfoSeqHelper.write (out, bad_ack_alarm_info_list.value);
         } catch (AcknowledgeAlarms $ex) {
           out = $rh.createExceptionReply ();
           AcknowledgeAlarmsHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.ParameterNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.ParameterNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.InvalidParameter $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.write (out, $ex);
         }
         break;
       }


  /*
      Request to remove acknowledgement information of one or more alarms.
      */
       case 4:  // org.omg.AlarmIRPSystem/AlarmIRP/unacknowledge_alarms
       {
         try {
           String alarm_information_id_list[] = org.omg.AlarmIRPConstDefs.AlarmInformationIdSeqHelper.read (in);
           String ack_user_id = in.read_string ();
           org.omg.ManagedGenericIRPConstDefs.StringTypeOpt ack_system_id = org.omg.ManagedGenericIRPConstDefs.StringTypeOptHelper.read (in);
           org.omg.AlarmIRPConstDefs.BadAlarmInformationIdSeqHolder bad_alarm_information_id_list = new org.omg.AlarmIRPConstDefs.BadAlarmInformationIdSeqHolder ();
           org.omg.ManagedGenericIRPConstDefs.Signal $result = null;
           $result = this.unacknowledge_alarms (alarm_information_id_list, ack_user_id, ack_system_id, bad_alarm_information_id_list);
           out = $rh.createReply();
           org.omg.ManagedGenericIRPConstDefs.SignalHelper.write (out, $result);
           org.omg.AlarmIRPConstDefs.BadAlarmInformationIdSeqHelper.write (out, bad_alarm_information_id_list.value);
         } catch (UnacknowledgeAlarms $ex) {
           out = $rh.createExceptionReply ();
           UnacknowledgeAlarmsHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.OperationNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.ParameterNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.ParameterNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.InvalidParameter $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.write (out, $ex);
         }
         break;
       }


  /*
      Make comment to one or more alarms.
      */
       case 5:  // org.omg.AlarmIRPSystem/AlarmIRP/comment_alarms
       {
         try {
           String alarm_information_id_list[] = org.omg.AlarmIRPConstDefs.AlarmInformationIdSeqHelper.read (in);
           String comment_user_id = in.read_string ();
           org.omg.ManagedGenericIRPConstDefs.StringTypeOpt comment_system_id = org.omg.ManagedGenericIRPConstDefs.StringTypeOptHelper.read (in);
           String comment_text = in.read_string ();
           org.omg.AlarmIRPConstDefs.BadAlarmInformationIdSeqHolder bad_alarm_information_id_list = new org.omg.AlarmIRPConstDefs.BadAlarmInformationIdSeqHolder ();
           org.omg.ManagedGenericIRPConstDefs.Signal $result = null;
           $result = this.comment_alarms (alarm_information_id_list, comment_user_id, comment_system_id, comment_text, bad_alarm_information_id_list);
           out = $rh.createReply();
           org.omg.ManagedGenericIRPConstDefs.SignalHelper.write (out, $result);
           org.omg.AlarmIRPConstDefs.BadAlarmInformationIdSeqHelper.write (out, bad_alarm_information_id_list.value);
         } catch (CommentAlarms $ex) {
           out = $rh.createExceptionReply ();
           CommentAlarmsHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.OperationNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.ParameterNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.ParameterNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.InvalidParameter $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.write (out, $ex);
         }
         break;
       }


  /*
      Request to clear one or more alarms.
      */
       case 6:  // org.omg.AlarmIRPSystem/AlarmIRP/clear_alarms
       {
         try {
           String alarm_information_id_list[] = org.omg.AlarmIRPConstDefs.AlarmInformationIdSeqHelper.read (in);
           String clear_user_id = in.read_string ();
           org.omg.ManagedGenericIRPConstDefs.StringTypeOpt clear_system_id = org.omg.ManagedGenericIRPConstDefs.StringTypeOptHelper.read (in);
           org.omg.AlarmIRPConstDefs.BadAlarmInformationIdSeqHolder bad_alarm_information_id_list = new org.omg.AlarmIRPConstDefs.BadAlarmInformationIdSeqHolder ();
           org.omg.ManagedGenericIRPConstDefs.Signal $result = null;
           $result = this.clear_alarms (alarm_information_id_list, clear_user_id, clear_system_id, bad_alarm_information_id_list);
           out = $rh.createReply();
           org.omg.ManagedGenericIRPConstDefs.SignalHelper.write (out, $result);
           org.omg.AlarmIRPConstDefs.BadAlarmInformationIdSeqHelper.write (out, bad_alarm_information_id_list.value);
         } catch (ClearAlarms $ex) {
           out = $rh.createExceptionReply ();
           ClearAlarmsHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.OperationNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.ParameterNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.ParameterNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.InvalidParameter $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.write (out, $ex);
         }
         break;
       }


  /*
      This method returns Alarm Informations.
      If flag is TRUE, all returned Alarm Informations shall be
      in AlarmInformationSeq that contains 0 or more Alarm Informations.
      Output parameter iter shall be useless.
      If flag is FALSE, no Alarm Informations shall be in AlarmInformationSeq.
      IRPAgent needs to use iter to retrieve them.
      */
       case 7:  // org.omg.AlarmIRPSystem/AlarmIRP/get_alarm_list
       {
         try {
           org.omg.ManagedGenericIRPConstDefs.StringTypeOpt filter = org.omg.ManagedGenericIRPConstDefs.StringTypeOptHelper.read (in);
           org.omg.AlarmIRPConstDefs.DNTypeOpt base_object = org.omg.AlarmIRPConstDefs.DNTypeOptHelper.read (in);
           org.omg.CORBA.BooleanHolder flag = new org.omg.CORBA.BooleanHolder ();
           AlarmInformationIteratorHolder iter = new AlarmInformationIteratorHolder ();
           org.omg.CosNotification.StructuredEvent $result[] = null;
           $result = this.get_alarm_list ("", flag, iter);
           out = $rh.createReply();
           org.omg.CosNotification.EventBatchHelper.write (out, $result);
           out.write_boolean (flag.value);
           AlarmInformationIteratorHelper.write (out, iter.value);
         } catch (GetAlarmList $ex) {
           out = $rh.createExceptionReply ();
           GetAlarmListHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.ParameterNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.ParameterNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.InvalidParameter $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.write (out, $ex);
         }
         break;
       }


  /*
      This method returns the count of Alarm Informations.
      */
       case 8:  // org.omg.AlarmIRPSystem/AlarmIRP/get_alarm_count
       {
         try {
           org.omg.ManagedGenericIRPConstDefs.StringTypeOpt filter = org.omg.ManagedGenericIRPConstDefs.StringTypeOptHelper.read (in);
           org.omg.CORBA.IntHolder critical_count = new org.omg.CORBA.IntHolder ();
           org.omg.CORBA.IntHolder major_count = new org.omg.CORBA.IntHolder ();
           org.omg.CORBA.IntHolder minor_count = new org.omg.CORBA.IntHolder ();
           org.omg.CORBA.IntHolder warning_count = new org.omg.CORBA.IntHolder ();
           org.omg.CORBA.IntHolder indeterminate_count = new org.omg.CORBA.IntHolder ();
           org.omg.CORBA.IntHolder cleared_count = new org.omg.CORBA.IntHolder ();
           this.get_alarm_count (filter, critical_count, major_count, minor_count, warning_count, indeterminate_count, cleared_count);
           out = $rh.createReply();
           out.write_ulong (critical_count.value);
           out.write_ulong (major_count.value);
           out.write_ulong (minor_count.value);
           out.write_ulong (warning_count.value);
           out.write_ulong (indeterminate_count.value);
           out.write_ulong (cleared_count.value);
         } catch (GetAlarmCount $ex) {
           out = $rh.createExceptionReply ();
           GetAlarmCountHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.OperationNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.ParameterNotSupported $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.ParameterNotSupportedHelper.write (out, $ex);
         } catch (org.omg.ManagedGenericIRPSystem.InvalidParameter $ex) {
           out = $rh.createExceptionReply ();
           org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:3gppsa5.org/AlarmIRPSystem/AlarmIRP:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public AlarmIRP _this() 
  {
    return AlarmIRPHelper.narrow(
    super._this_object());
  }

  public AlarmIRP _this(org.omg.CORBA.ORB orb) 
  {
    return AlarmIRPHelper.narrow(
    super._this_object(orb));
  }


} // class AlarmIRPPOA
