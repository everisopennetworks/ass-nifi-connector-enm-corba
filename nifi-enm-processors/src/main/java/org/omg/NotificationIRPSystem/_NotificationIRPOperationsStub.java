package org.omg.NotificationIRPSystem;

/**
 * org.omg.NotificationIRPSystem/_NotificationIRPStub.java .
 * Generated by the IDL-to-Java compiler (portable), version "3.2"
 * from org.omg.NotificationIRPSystem.idl
 * jueves 5 de septiembre de 2019 01:39:37 AM CDT
 */

public class _NotificationIRPOperationsStub extends org.omg.CORBA.portable.ObjectImpl implements NotificationIRPOperations
{


    /*
        Return the list of all supported Notification IRP versions
        Each IRPVersion is defined by the rule in TS 32.311 clause titled
        "IRP document version number string"
        */
    public String[] get_notification_IRP_versions () throws GetNotificationIRPVersions
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("get_notification_IRP_versions", true);
            $in = _invoke ($out);
            String $result[] = org.omg.ManagedGenericIRPConstDefs.VersionNumberSetHelper.read ($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/GetNotificationIRPVersions:1.0"))
                throw GetNotificationIRPVersionsHelper.read ($in);
            else
                throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return get_notification_IRP_versions (        );
        } finally {
            _releaseReply ($in);
        }
    } // get_notification_IRP_versions


    /*
        Return the list of all supported operations and their supported
        parameters for a specific Notification IRP version.
        */
    public org.omg.ManagedGenericIRPConstDefs.Method[] get_notification_IRP_operations_profile (String notification_irp_version) throws GetNotificationIRPOperationsProfile, org.omg.ManagedGenericIRPSystem.OperationNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("get_notification_IRP_operations_profile", true);
            org.omg.ManagedGenericIRPConstDefs.VersionNumberHelper.write ($out, notification_irp_version);
            $in = _invoke ($out);
            org.omg.ManagedGenericIRPConstDefs.Method $result[] = org.omg.ManagedGenericIRPConstDefs.MethodListHelper.read ($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/GetNotificationIRPOperationsProfile:1.0"))
                throw GetNotificationIRPOperationsProfileHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/OperationNotSupported:1.0"))
                throw org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
            else
                throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return get_notification_IRP_operations_profile (notification_irp_version        );
        } finally {
            _releaseReply ($in);
        }
    } // get_notification_IRP_operations_profile


    /*
        Return the list of all supported notifications.
        Agent should always throw a org.omg.ManagedGenericIRPSystem::OperationNotSupported
        exception.
        Similar method, such as get_alarm_IRP_notification_profile,
        is supported in other IRP versions such as Alarm IRP.
        */
    public org.omg.ManagedGenericIRPConstDefs.Method[] get_notification_IRP_notification_profile (String notification_irp_version) throws GetNotificationIRPNotificationProfile, org.omg.ManagedGenericIRPSystem.OperationNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("get_notification_IRP_notification_profile", true);
            org.omg.ManagedGenericIRPConstDefs.VersionNumberHelper.write ($out, notification_irp_version);
            $in = _invoke ($out);
            org.omg.ManagedGenericIRPConstDefs.Method $result[] = org.omg.ManagedGenericIRPConstDefs.MethodListHelper.read ($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/GetNotificationIRPNotificationProfile:1.0"))
                throw GetNotificationIRPNotificationProfileHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/OperationNotSupported:1.0"))
                throw org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
            else
                throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return get_notification_IRP_notification_profile (notification_irp_version        );
        } finally {
            _releaseReply ($in);
        }
    } // get_notification_IRP_notification_profile


    /*
        Obtain the list of all supported notification categories.
        */
    public String[] get_notification_categories (org.omg.NotificationIRPConstDefs.NotificationTypesSetHolder notification_type_list) throws GetNotificationCategories, org.omg.ManagedGenericIRPSystem.OperationNotSupported
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("get_notification_categories", true);
            $in = _invoke ($out);
            String $result[] = org.omg.NotificationIRPConstDefs.NotificationCategorySetHelper.read ($in);
            notification_type_list.value = org.omg.NotificationIRPConstDefs.NotificationTypesSetHelper.read ($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/GetNotificationCategories:1.0"))
                throw GetNotificationCategoriesHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/OperationNotSupported:1.0"))
                throw org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.read ($in);
            else
                throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return get_notification_categories (notification_type_list        );
        } finally {
            _releaseReply ($in);
        }
    } // get_notification_categories

    public String attach_push (org.omg.CORBA.Object manager_reference, int time_tick, String[] notification_categories, String filter) throws Attach, org.omg.ManagedGenericIRPSystem.ParameterNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter, AlreadySubscribed, AtLeastOneNotificationCategoryNotSupported
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("attach_push", true);
            $out.write_Object(manager_reference);
            $out.write_ulong (time_tick);
            org.omg.NotificationIRPConstDefs.NotificationCategorySetHelper.write ($out, notification_categories);
            $out.write_string(filter);
            System.out.println("Invocara attach_push");
            $in = _invoke ($out);
            String $result = org.omg.NotificationIRPConstDefs.SubscriptionIdHelper.read ($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $ex.printStackTrace();
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/Attach:1.0"))
                throw AttachHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/ParameterNotSupported:1.0"))
                throw org.omg.ManagedGenericIRPSystem.ParameterNotSupportedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/AlreadySubscribed:1.0"))
                throw AlreadySubscribedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/AtLeastOneNotificationCategoryNotSupported:1.0"))
                throw AtLeastOneNotificationCategoryNotSupportedHelper.read ($in);
            else
                throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return attach_push (manager_reference, time_tick, notification_categories, filter        );
        } finally {
            _releaseReply ($in);
        }
    } // attach_push

    public String attach_push_b (String manager_reference, int time_tick, String[] notification_categories, org.omg.ManagedGenericIRPConstDefs.StringTypeOpt filter, org.omg.CosNotifyChannelAdmin.SequenceProxyPushSupplierHolder system_reference) throws Attach, org.omg.ManagedGenericIRPSystem.OperationNotSupported, org.omg.ManagedGenericIRPSystem.ParameterNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter, AlreadySubscribed, AtLeastOneNotificationCategoryNotSupported
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("attach_push_b", true);
            $out.write_string (manager_reference);
            $out.write_ulong (time_tick);
            org.omg.NotificationIRPConstDefs.NotificationCategorySetHelper.write ($out, notification_categories);
            org.omg.ManagedGenericIRPConstDefs.StringTypeOptHelper.write ($out, filter);
            $in = _invoke ($out);
            String $result = org.omg.NotificationIRPConstDefs.SubscriptionIdHelper.read ($in);
            system_reference.value = org.omg.CosNotifyChannelAdmin.SequenceProxyPushSupplierHelper.read ($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/Attach:1.0"))
                throw AttachHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/OperationNotSupported:1.0"))
                throw org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/ParameterNotSupported:1.0"))
                throw org.omg.ManagedGenericIRPSystem.ParameterNotSupportedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/AlreadySubscribed:1.0"))
                throw AlreadySubscribedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/AtLeastOneNotificationCategoryNotSupported:1.0"))
                throw AtLeastOneNotificationCategoryNotSupportedHelper.read ($in);
            else
                throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return attach_push_b (manager_reference, time_tick, notification_categories, filter, system_reference        );
        } finally {
            _releaseReply ($in);
        }
    } // attach_push_b

    public String attach_pull (String manager_reference, int time_tick, String[] notification_categories, org.omg.ManagedGenericIRPConstDefs.StringTypeOpt filter, org.omg.CosNotifyChannelAdmin.SequenceProxyPullSupplierHolder system_reference) throws Attach, org.omg.ManagedGenericIRPSystem.OperationNotSupported, org.omg.ManagedGenericIRPSystem.ParameterNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter, AlreadySubscribed, AtLeastOneNotificationCategoryNotSupported
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("attach_pull", true);
            $out.write_string (manager_reference);
            $out.write_ulong (time_tick);
            org.omg.NotificationIRPConstDefs.NotificationCategorySetHelper.write ($out, notification_categories);
            org.omg.ManagedGenericIRPConstDefs.StringTypeOptHelper.write ($out, filter);
            $in = _invoke ($out);
            String $result = org.omg.NotificationIRPConstDefs.SubscriptionIdHelper.read ($in);
            system_reference.value = org.omg.CosNotifyChannelAdmin.SequenceProxyPullSupplierHelper.read ($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/Attach:1.0"))
                throw AttachHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/OperationNotSupported:1.0"))
                throw org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/ParameterNotSupported:1.0"))
                throw org.omg.ManagedGenericIRPSystem.ParameterNotSupportedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/AlreadySubscribed:1.0"))
                throw AlreadySubscribedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/AtLeastOneNotificationCategoryNotSupported:1.0"))
                throw AtLeastOneNotificationCategoryNotSupportedHelper.read ($in);
            else
                throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return attach_pull (manager_reference, time_tick, notification_categories, filter, system_reference        );
        } finally {
            _releaseReply ($in);
        }
    } // attach_pull


    /*
        Replace the present filter constraint with the one provided.
        */
    public void change_subscription_filter (String subscription_id, String filter) throws ChangeSubscriptionFilter, org.omg.ManagedGenericIRPSystem.OperationNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("change_subscription_filter", true);
            org.omg.NotificationIRPConstDefs.SubscriptionIdHelper.write ($out, subscription_id);
            $out.write_string (filter);
            $in = _invoke ($out);
            return;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/ChangeSubscriptionFilter:1.0"))
                throw ChangeSubscriptionFilterHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/OperationNotSupported:1.0"))
                throw org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
            else
                throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            change_subscription_filter (subscription_id, filter        );
        } finally {
            _releaseReply ($in);
        }
    } // change_subscription_filter


    /*
        Check the current state of the subscription.
        */
    public String[] get_subscription_status (String subscription_id, org.omg.ManagedGenericIRPConstDefs.StringTypeOptHolder filter_in_effect, org.omg.NotificationIRPConstDefs.SubscriptionStateHolder subscription_state, org.omg.CORBA.IntHolder time_tick) throws GetSubscriptionStatus, org.omg.ManagedGenericIRPSystem.OperationNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("get_subscription_status", true);
            org.omg.NotificationIRPConstDefs.SubscriptionIdHelper.write ($out, subscription_id);
            $in = _invoke ($out);
            String $result[] = org.omg.NotificationIRPConstDefs.NotificationCategorySetHelper.read ($in);
            filter_in_effect.value = org.omg.ManagedGenericIRPConstDefs.StringTypeOptHelper.read ($in);
            subscription_state.value = org.omg.NotificationIRPConstDefs.SubscriptionStateHelper.read ($in);
            time_tick.value = $in.read_ulong ();
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/GetSubscriptionStatus:1.0"))
                throw GetSubscriptionStatusHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/OperationNotSupported:1.0"))
                throw org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
            else
                throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return get_subscription_status (subscription_id, filter_in_effect, subscription_state, time_tick        );
        } finally {
            _releaseReply ($in);
        }
    } // get_subscription_status

    public String[] get_subscription_ids (String manager_reference) throws GetSubscriptionIds, org.omg.ManagedGenericIRPSystem.OperationNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("get_subscription_ids", true);
            $out.write_string (manager_reference);
            $in = _invoke ($out);
            String $result[] = org.omg.NotificationIRPConstDefs.SubscriptionIdSetHelper.read ($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/GetSubscriptionIds:1.0"))
                throw GetSubscriptionIdsHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/OperationNotSupported:1.0"))
                throw org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
            else
                throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return get_subscription_ids (manager_reference        );
        } finally {
            _releaseReply ($in);
        }
    } // get_subscription_ids


    /*
        Terminates the subscription with the agent.
        */
    public void detach (String manager_reference, String subscription_id) throws DetachException, org.omg.ManagedGenericIRPSystem.ParameterNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("detach", true);
            $out.write_string (manager_reference);
            org.omg.NotificationIRPConstDefs.SubscriptionIdHelper.write ($out, subscription_id);
            $in = _invoke ($out);
            return;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            if (_id.equals ("IDL:3gppsa5.org/NotificationIRPSystem/DetachException:1.0"))
                throw DetachExceptionHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/ParameterNotSupported:1.0"))
                throw org.omg.ManagedGenericIRPSystem.ParameterNotSupportedHelper.read ($in);
            else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
            else
                throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            detach (manager_reference, subscription_id        );
        } finally {
            _releaseReply ($in);
        }
    } // detach

    // Type-specific CORBA::Object operations
    private static String[] __ids = {
            "IDL:3gppsa5.org/NotificationIRPSystem/NotificationIRP:1.0"};

    public String[] _ids ()
    {
        return (String[])__ids.clone ();
    }

    private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
    {
        String str = s.readUTF ();
        String[] args = null;
        java.util.Properties props = null;
        org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
        try {
            org.omg.CORBA.Object obj = orb.string_to_object (str);
            org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
            _set_delegate (delegate);
        } finally {
            orb.destroy() ;
        }
    }

    private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
    {
        String[] args = null;
        java.util.Properties props = null;
        org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
        try {
            String str = orb.object_to_string (this);
            s.writeUTF (str);
        } finally {
            orb.destroy() ;
        }
    }
} // class _NotificationIRPStub
