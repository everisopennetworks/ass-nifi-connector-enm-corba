package org.omg.CosNotifyChannelAdmin;


/**
* org.omg.CosNotifyChannelAdmin/ConsumerAdminPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from org.omg.CosNotifyChannelAdmin.idl
* jueves 5 de septiembre de 2019 02:16:17 AM CDT
*/

public abstract class ConsumerAdminPOA extends org.omg.PortableServer.Servant
 implements ConsumerAdminOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_MyID", new Integer (0));
    _methods.put ("_get_MyChannel", new Integer (1));
    _methods.put ("_get_MyOperator", new Integer (2));
    _methods.put ("_get_priority_filter", new Integer (3));
    _methods.put ("_set_priority_filter", new Integer (4));
    _methods.put ("_get_lifetime_filter", new Integer (5));
    _methods.put ("_set_lifetime_filter", new Integer (6));
    _methods.put ("_get_pull_suppliers", new Integer (7));
    _methods.put ("_get_push_suppliers", new Integer (8));
    _methods.put ("get_proxy_supplier", new Integer (9));
    _methods.put ("obtain_notification_pull_supplier", new Integer (10));
    _methods.put ("obtain_notification_push_supplier", new Integer (11));
    _methods.put ("destroy", new Integer (12));
    _methods.put ("get_qos", new Integer (13));
    _methods.put ("set_qos", new Integer (14));
    _methods.put ("validate_qos", new Integer (15));
    _methods.put ("subscription_change", new Integer (16));
    _methods.put ("add_filter", new Integer (17));
    _methods.put ("remove_filter", new Integer (18));
    _methods.put ("get_filter", new Integer (19));
    _methods.put ("get_all_filters", new Integer (20));
    _methods.put ("remove_all_filters", new Integer (21));
    _methods.put ("obtain_push_supplier", new Integer (22));
    _methods.put ("obtain_pull_supplier", new Integer (23));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    Integer __method = (Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/_get_MyID
       {
         int $result = (int)0;
         $result = this.MyID ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 1:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/_get_MyChannel
       {
         EventChannel $result = null;
         $result = this.MyChannel ();
         out = $rh.createReply();
         EventChannelHelper.write (out, $result);
         break;
       }

       case 2:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/_get_MyOperator
       {
         InterFilterGroupOperator $result = null;
         $result = this.MyOperator ();
         out = $rh.createReply();
         InterFilterGroupOperatorHelper.write (out, $result);
         break;
       }

       case 3:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/_get_priority_filter
       {
         org.omg.CosNotifyFilter.MappingFilter $result = null;
         $result = this.priority_filter ();
         out = $rh.createReply();
         org.omg.CosNotifyFilter.MappingFilterHelper.write (out, $result);
         break;
       }

       case 4:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/_set_priority_filter
       {
         org.omg.CosNotifyFilter.MappingFilter newPriority_filter = org.omg.CosNotifyFilter.MappingFilterHelper.read (in);
         this.priority_filter (newPriority_filter);
         out = $rh.createReply();
         break;
       }

       case 5:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/_get_lifetime_filter
       {
         org.omg.CosNotifyFilter.MappingFilter $result = null;
         $result = this.lifetime_filter ();
         out = $rh.createReply();
         org.omg.CosNotifyFilter.MappingFilterHelper.write (out, $result);
         break;
       }

       case 6:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/_set_lifetime_filter
       {
         org.omg.CosNotifyFilter.MappingFilter newLifetime_filter = org.omg.CosNotifyFilter.MappingFilterHelper.read (in);
         this.lifetime_filter (newLifetime_filter);
         out = $rh.createReply();
         break;
       }

       case 7:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/_get_pull_suppliers
       {
         int $result[] = null;
         $result = this.pull_suppliers ();
         out = $rh.createReply();
         ProxyIDSeqHelper.write (out, $result);
         break;
       }

       case 8:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/_get_push_suppliers
       {
         int $result[] = null;
         $result = this.push_suppliers ();
         out = $rh.createReply();
         ProxyIDSeqHelper.write (out, $result);
         break;
       }

       case 9:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/get_proxy_supplier
       {
         try {
           int proxy_id = ProxyIDHelper.read (in);
           ProxySupplier $result = null;
           $result = this.get_proxy_supplier (proxy_id);
           out = $rh.createReply();
           ProxySupplierHelper.write (out, $result);
         } catch (ProxyNotFound $ex) {
           out = $rh.createExceptionReply ();
           ProxyNotFoundHelper.write (out, $ex);
         }
         break;
       }

       case 10:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/obtain_notification_pull_supplier
       {
         try {
           ClientType ctype = ClientTypeHelper.read (in);
           org.omg.CORBA.IntHolder proxy_id = new org.omg.CORBA.IntHolder ();
           ProxySupplier $result = null;
           $result = this.obtain_notification_pull_supplier (ctype, proxy_id);
           out = $rh.createReply();
           ProxySupplierHelper.write (out, $result);
           ProxyIDHelper.write (out, proxy_id.value);
         } catch (AdminLimitExceeded $ex) {
           out = $rh.createExceptionReply ();
           AdminLimitExceededHelper.write (out, $ex);
         }
         break;
       }

       case 11:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/obtain_notification_push_supplier
       {
         try {
           ClientType ctype = ClientTypeHelper.read (in);
           org.omg.CORBA.IntHolder proxy_id = new org.omg.CORBA.IntHolder ();
           ProxySupplier $result = null;
           $result = this.obtain_notification_push_supplier (ctype, proxy_id);
           out = $rh.createReply();
           ProxySupplierHelper.write (out, $result);
           ProxyIDHelper.write (out, proxy_id.value);
         } catch (AdminLimitExceeded $ex) {
           out = $rh.createExceptionReply ();
           AdminLimitExceededHelper.write (out, $ex);
         }
         break;
       }

       case 12:  // org.omg.CosNotifyChannelAdmin/ConsumerAdmin/destroy
       {
         this.destroy ();
         out = $rh.createReply();
         break;
       }

       case 13:  // org.omg.CosNotification/QoSAdmin/get_qos
       {
         org.omg.CosNotification.Property $result[] = null;
         $result = this.get_qos ();
         out = $rh.createReply();
         org.omg.CosNotification.PropertySeqHelper.write (out, $result);
         break;
       }

       case 14:  // org.omg.CosNotification/QoSAdmin/set_qos
       {
         try {
           org.omg.CosNotification.Property qos[] = org.omg.CosNotification.QoSPropertiesHelper.read (in);
           this.set_qos (qos);
           out = $rh.createReply();
         } catch (org.omg.CosNotification.UnsupportedQoS $ex) {
           out = $rh.createExceptionReply ();
           org.omg.CosNotification.UnsupportedQoSHelper.write (out, $ex);
         }
         break;
       }

       case 15:  // org.omg.CosNotification/QoSAdmin/validate_qos
       {
         try {
           org.omg.CosNotification.Property required_qos[] = org.omg.CosNotification.QoSPropertiesHelper.read (in);
           org.omg.CosNotification.NamedPropertyRangeSeqHolder available_qos = new org.omg.CosNotification.NamedPropertyRangeSeqHolder ();
           this.validate_qos (required_qos, available_qos);
           out = $rh.createReply();
           org.omg.CosNotification.NamedPropertyRangeSeqHelper.write (out, available_qos.value);
         } catch (org.omg.CosNotification.UnsupportedQoS $ex) {
           out = $rh.createExceptionReply ();
           org.omg.CosNotification.UnsupportedQoSHelper.write (out, $ex);
         }
         break;
       }

       case 16:  // org.omg.CosNotifyComm/NotifySubscribe/subscription_change
       {
         try {
           org.omg.CosNotification._EventType added[] = org.omg.CosNotification.EventTypeSeqHelper.read (in);
           org.omg.CosNotification._EventType removed[] = org.omg.CosNotification.EventTypeSeqHelper.read (in);
           this.subscription_change (added, removed);
           out = $rh.createReply();
         } catch (org.omg.CosNotifyComm.InvalidEventType $ex) {
           out = $rh.createExceptionReply ();
           org.omg.CosNotifyComm.InvalidEventTypeHelper.write (out, $ex);
         }
         break;
       }

       case 17:  // org.omg.CosNotifyFilter/FilterAdmin/add_filter
       {
         org.omg.CosNotifyFilter.Filter new_filter = org.omg.CosNotifyFilter.FilterHelper.read (in);
         int $result = (int)0;
         $result = this.add_filter (new_filter);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 18:  // org.omg.CosNotifyFilter/FilterAdmin/remove_filter
       {
         try {
           int filter = org.omg.CosNotifyFilter.FilterIDHelper.read (in);
           this.remove_filter (filter);
           out = $rh.createReply();
         } catch (org.omg.CosNotifyFilter.FilterNotFound $ex) {
           out = $rh.createExceptionReply ();
           org.omg.CosNotifyFilter.FilterNotFoundHelper.write (out, $ex);
         }
         break;
       }

       case 19:  // org.omg.CosNotifyFilter/FilterAdmin/get_filter
       {
         try {
           int filter = org.omg.CosNotifyFilter.FilterIDHelper.read (in);
           org.omg.CosNotifyFilter.Filter $result = null;
           $result = this.get_filter (filter);
           out = $rh.createReply();
           org.omg.CosNotifyFilter.FilterHelper.write (out, $result);
         } catch (org.omg.CosNotifyFilter.FilterNotFound $ex) {
           out = $rh.createExceptionReply ();
           org.omg.CosNotifyFilter.FilterNotFoundHelper.write (out, $ex);
         }
         break;
       }

       case 20:  // org.omg.CosNotifyFilter/FilterAdmin/get_all_filters
       {
         int $result[] = null;
         $result = this.get_all_filters ();
         out = $rh.createReply();
         org.omg.CosNotifyFilter.FilterIDSeqHelper.write (out, $result);
         break;
       }

       case 21:  // org.omg.CosNotifyFilter/FilterAdmin/remove_all_filters
       {
         this.remove_all_filters ();
         out = $rh.createReply();
         break;
       }

       case 22:  // org.omg.CosEventChannelAdmin/ConsumerAdmin/obtain_push_supplier
       {
         org.omg.CosEventChannelAdmin.ProxyPushSupplier $result = null;
         $result = this.obtain_push_supplier ();
         out = $rh.createReply();
         org.omg.CosEventChannelAdmin.ProxyPushSupplierHelper.write (out, $result);
         break;
       }

       case 23:  // org.omg.CosEventChannelAdmin/ConsumerAdmin/obtain_pull_supplier
       {
         org.omg.CosEventChannelAdmin.ProxyPullSupplier $result = null;
         $result = this.obtain_pull_supplier ();
         out = $rh.createReply();
         org.omg.CosEventChannelAdmin.ProxyPullSupplierHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/CosNotifyChannelAdmin/ConsumerAdmin:1.0",
    "IDL:omg.org/CosNotification/QoSAdmin:1.0",
    "IDL:omg.org/CosNotifyComm/NotifySubscribe:1.0",
    "IDL:omg.org/CosNotifyFilter/FilterAdmin:1.0",
    "IDL:omg.org/CosEventChannelAdmin/ConsumerAdmin:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ConsumerAdmin _this() 
  {
    return ConsumerAdminHelper.narrow(
    super._this_object());
  }

  public ConsumerAdmin _this(org.omg.CORBA.ORB orb) 
  {
    return ConsumerAdminHelper.narrow(
    super._this_object(orb));
  }


} // class ConsumerAdminPOA
