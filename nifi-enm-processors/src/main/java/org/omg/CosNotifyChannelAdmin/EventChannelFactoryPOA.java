package org.omg.CosNotifyChannelAdmin;


/**
* org.omg.CosNotifyChannelAdmin/EventChannelFactoryPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from org.omg.CosNotifyChannelAdmin.idl
* jueves 5 de septiembre de 2019 02:16:17 AM CDT
*/

public abstract class EventChannelFactoryPOA extends org.omg.PortableServer.Servant
 implements EventChannelFactoryOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("create_channel", new Integer (0));
    _methods.put ("get_all_channels", new Integer (1));
    _methods.put ("get_event_channel", new Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    Integer __method = (Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // org.omg.CosNotifyChannelAdmin/EventChannelFactory/create_channel
       {
         try {
           org.omg.CosNotification.Property initial_qos[] = org.omg.CosNotification.QoSPropertiesHelper.read (in);
           org.omg.CosNotification.Property initial_admin[] = org.omg.CosNotification.AdminPropertiesHelper.read (in);
           org.omg.CORBA.IntHolder id = new org.omg.CORBA.IntHolder ();
           EventChannel $result = null;
           $result = this.create_channel (initial_qos, initial_admin, id);
           out = $rh.createReply();
           EventChannelHelper.write (out, $result);
           ChannelIDHelper.write (out, id.value);
         } catch (org.omg.CosNotification.UnsupportedQoS $ex) {
           out = $rh.createExceptionReply ();
           org.omg.CosNotification.UnsupportedQoSHelper.write (out, $ex);
         } catch (org.omg.CosNotification.UnsupportedAdmin $ex) {
           out = $rh.createExceptionReply ();
           org.omg.CosNotification.UnsupportedAdminHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // org.omg.CosNotifyChannelAdmin/EventChannelFactory/get_all_channels
       {
         int $result[] = null;
         $result = this.get_all_channels ();
         out = $rh.createReply();
         ChannelIDSeqHelper.write (out, $result);
         break;
       }

       case 2:  // org.omg.CosNotifyChannelAdmin/EventChannelFactory/get_event_channel
       {
         try {
           int id = ChannelIDHelper.read (in);
           EventChannel $result = null;
           $result = this.get_event_channel (id);
           out = $rh.createReply();
           EventChannelHelper.write (out, $result);
         } catch (ChannelNotFound $ex) {
           out = $rh.createExceptionReply ();
           ChannelNotFoundHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/CosNotifyChannelAdmin/EventChannelFactory:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public EventChannelFactory _this() 
  {
    return EventChannelFactoryHelper.narrow(
    super._this_object());
  }

  public EventChannelFactory _this(org.omg.CORBA.ORB orb) 
  {
    return EventChannelFactoryHelper.narrow(
    super._this_object(orb));
  }


} // class EventChannelFactoryPOA
