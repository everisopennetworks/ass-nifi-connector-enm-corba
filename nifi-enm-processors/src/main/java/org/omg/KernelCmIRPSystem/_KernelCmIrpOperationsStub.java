package org.omg.KernelCmIRPSystem;


/**
* org.omg.KernelCmIRPSystem/_KernelCmIrpOperationsStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from org.omg.KernelCmIRPSystem.idl
* jueves 5 de septiembre de 2019 02:19:42 AM CDT
*/


/**
     * The KernelCmIrpOperations interface.
     * Supports a number of Resource Model versions.
     */
public class _KernelCmIrpOperationsStub extends org.omg.CORBA.portable.ObjectImpl implements KernelCmIrpOperations
{


  /*
      Return the list of all supported Kernel CM IRP versions.
      */
  public String[] get_kernel_CM_IRP_versions () throws GetKernelCMIRPVersionsException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_kernel_CM_IRP_versions", true);
                $in = _invoke ($out);
                String $result[] = org.omg.ManagedGenericIRPConstDefs.VersionNumberSetHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:3gppsa5.org/KernelCmIRPSystem/GetKernelCMIRPVersionsException:1.0"))
                    throw GetKernelCMIRPVersionsExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_kernel_CM_IRP_versions (        );
            } finally {
                _releaseReply ($in);
            }
  } // get_kernel_CM_IRP_versions


  /**
      * Get the version(s) of the interface 
      *
      * @raises GetNRMIRPVersion when the system for some reason 
      *   can not return the supported versions. 
      * @returns all supported versions.
      */
  public void get_NRM_IRP_version (org.omg.ManagedGenericIRPConstDefs.VersionNumberSetHolder versionNumberList, org.omg.ManagedGenericIRPConstDefs.VersionNumberSetHolder vSEVersionNumberList) throws GetNRMIRPVersion
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_NRM_IRP_version", true);
                $in = _invoke ($out);
                versionNumberList.value = org.omg.ManagedGenericIRPConstDefs.VersionNumberSetHelper.read ($in);
                vSEVersionNumberList.value = org.omg.ManagedGenericIRPConstDefs.VersionNumberSetHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:3gppsa5.org/KernelCmIRPSystem/GetNRMIRPVersion:1.0"))
                    throw GetNRMIRPVersionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                get_NRM_IRP_version (versionNumberList, vSEVersionNumberList        );
            } finally {
                _releaseReply ($in);
            }
  } // get_NRM_IRP_version


  /*
      Return the list of all supported operations and their supported
      parameters for a specific KernelCM IRP version.
      */
  public org.omg.ManagedGenericIRPConstDefs.Method[] get_kernel_CM_IRP_operation_profile (String kernel_CM_IRP_version) throws GetKernelCMIRPOperationProfileException, org.omg.ManagedGenericIRPSystem.OperationNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_kernel_CM_IRP_operation_profile", true);
                org.omg.ManagedGenericIRPConstDefs.VersionNumberHelper.write ($out, kernel_CM_IRP_version);
                $in = _invoke ($out);
                org.omg.ManagedGenericIRPConstDefs.Method $result[] = org.omg.ManagedGenericIRPConstDefs.MethodListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:3gppsa5.org/KernelCmIRPSystem/GetKernelCMIRPOperationProfileException:1.0"))
                    throw GetKernelCMIRPOperationProfileExceptionHelper.read ($in);
                else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/OperationNotSupported:1.0"))
                    throw org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.read ($in);
                else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                    throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_kernel_CM_IRP_operation_profile (kernel_CM_IRP_version        );
            } finally {
                _releaseReply ($in);
            }
  } // get_kernel_CM_IRP_operation_profile


  /*
      Return the list of all supported notifications and their supported
      parameters for a specific KernelCM IRP version.
      */
  public org.omg.ManagedGenericIRPConstDefs.Method[] get_kernel_CM_IRP_notification_profile (String kernel_CM_IRP_version) throws GetKernelCMIRPNotificationProfileException, org.omg.ManagedGenericIRPSystem.OperationNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_kernel_CM_IRP_notification_profile", true);
                org.omg.ManagedGenericIRPConstDefs.VersionNumberHelper.write ($out, kernel_CM_IRP_version);
                $in = _invoke ($out);
                org.omg.ManagedGenericIRPConstDefs.Method $result[] = org.omg.ManagedGenericIRPConstDefs.MethodListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:3gppsa5.org/KernelCmIRPSystem/GetKernelCMIRPNotificationProfileException:1.0"))
                    throw GetKernelCMIRPNotificationProfileExceptionHelper.read ($in);
                else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/OperationNotSupported:1.0"))
                    throw org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.read ($in);
                else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                    throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_kernel_CM_IRP_notification_profile (kernel_CM_IRP_version        );
            } finally {
                _releaseReply ($in);
            }
  } // get_kernel_CM_IRP_notification_profile

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:3gppsa5.org/KernelCmIRPSystem/KernelCmIrpOperations:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _KernelCmIrpOperationsStub
