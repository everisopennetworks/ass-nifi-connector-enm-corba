package org.omg.EPIRPSystem;


/**
* org.omg.EPIRPSystem/_EPIRPStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from org.omg.EPIRPSystem.idl
* jueves 5 de septiembre de 2019 02:17:21 AM CDT
*/


/*
  */
public class _EPIRPStub extends org.omg.CORBA.portable.ObjectImpl implements EPIRP
{


  /**
     * The IRPManager uses this operation to request the EPIRP to
     * return the outline information of the supported IRPs. The EPIRP
     * shall return the outline information of all the IRPs supported by the 
     * IRPAgent that contains the EPIRP. The EPIRP may 
     * additionally return the outline information of all the IRPs supported 
     * by other IRPAgents.
     */
  public org.omg.EPIRPConstDefs.ResultType get_IRP_outline (String iRPVersion, org.omg.EPIRPConstDefs.SupportedIRPListTypeHolder supportedIRPList) throws GetIRPOutline, InvalidIRPVersion
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_IRP_outline", true);
                org.omg.ManagedGenericIRPConstDefs.VersionNumberHelper.write ($out, iRPVersion);
                $in = _invoke ($out);
                org.omg.EPIRPConstDefs.ResultType $result = org.omg.EPIRPConstDefs.ResultTypeHelper.read ($in);
                supportedIRPList.value = org.omg.EPIRPConstDefs.SupportedIRPListTypeHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:3gppsa5.org/EPIRPSystem/GetIRPOutline:1.0"))
                    throw GetIRPOutlineHelper.read ($in);
                else if (_id.equals ("IDL:3gppsa5.org/EPIRPSystem/InvalidIRPVersion:1.0"))
                    throw InvalidIRPVersionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_IRP_outline (iRPVersion, supportedIRPList        );
            } finally {
                _releaseReply ($in);
            }
  } // get_IRP_outline


  /**
     * The IRPManager uses this operation to request the EPIRP to return
     * the stringified IOR of the IRP identified by systemDn and irpId.
     */
  public org.omg.EPIRPConstDefs.ResultType get_IRP_reference (String managerIdentifier, String systemDn, String irpId, org.omg.CORBA.StringHolder iRPReference) throws GetIRPReference, org.omg.ManagedGenericIRPSystem.InvalidParameter
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_IRP_reference", true);
                org.omg.EPIRPConstDefs.ManagerIdentifierTypeHelper.write ($out, managerIdentifier);
                org.omg.EPIRPConstDefs.DNTypeHelper.write ($out, systemDn);
                org.omg.EPIRPConstDefs.IRPIdTypeHelper.write ($out, irpId);
                $in = _invoke ($out);
                org.omg.EPIRPConstDefs.ResultType $result = org.omg.EPIRPConstDefs.ResultTypeHelper.read ($in);
                iRPReference.value = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:3gppsa5.org/EPIRPSystem/GetIRPReference:1.0"))
                    throw GetIRPReferenceHelper.read ($in);
                else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                    throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_IRP_reference (managerIdentifier, systemDn, irpId, iRPReference        );
            } finally {
                _releaseReply ($in);
            }
  } // get_IRP_reference


  /**
     * The IRPManager uses this operation to request the IRPAgent to
     * release a specific IRP reference. Whether the IRP reference
     * is really released or not in the IRPAgent is outside the 
     * scope of this document.
     */
  public org.omg.EPIRPConstDefs.ResultType release_IRP_reference (String managerIdentifier, String iRPReference) throws ReleaseIRPReference, UnknownIRPReference
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("release_IRP_reference", true);
                org.omg.EPIRPConstDefs.ManagerIdentifierTypeHelper.write ($out, managerIdentifier);
                $out.write_string (iRPReference);
                $in = _invoke ($out);
                org.omg.EPIRPConstDefs.ResultType $result = org.omg.EPIRPConstDefs.ResultTypeHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:3gppsa5.org/EPIRPSystem/ReleaseIRPReference:1.0"))
                    throw ReleaseIRPReferenceHelper.read ($in);
                else if (_id.equals ("IDL:3gppsa5.org/EPIRPSystem/UnknownIRPReference:1.0"))
                    throw UnknownIRPReferenceHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return release_IRP_reference (managerIdentifier, iRPReference        );
            } finally {
                _releaseReply ($in);
            }
  } // release_IRP_reference


  /**
      * Return the list of all supported EPIRP versions.
      */
  public String[] get_EP_IRP_versions () throws GetEPIRPVersions
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_EP_IRP_versions", true);
                $in = _invoke ($out);
                String $result[] = org.omg.ManagedGenericIRPConstDefs.VersionNumberSetHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:3gppsa5.org/EPIRPSystem/GetEPIRPVersions:1.0"))
                    throw GetEPIRPVersionsHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_EP_IRP_versions (        );
            } finally {
                _releaseReply ($in);
            }
  } // get_EP_IRP_versions


  /**
      * Return the list of all supported operations and their supported
      * parameters for a specific EPIRP version.
      */
  public org.omg.ManagedGenericIRPConstDefs.Method[] get_EP_IRP_operations_profile (String iRPVersion) throws GetEPIRPOperationsProfile, org.omg.ManagedGenericIRPSystem.OperationNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_EP_IRP_operations_profile", true);
                org.omg.ManagedGenericIRPConstDefs.VersionNumberHelper.write ($out, iRPVersion);
                $in = _invoke ($out);
                org.omg.ManagedGenericIRPConstDefs.Method $result[] = org.omg.ManagedGenericIRPConstDefs.MethodListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:3gppsa5.org/EPIRPSystem/GetEPIRPOperationsProfile:1.0"))
                    throw GetEPIRPOperationsProfileHelper.read ($in);
                else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/OperationNotSupported:1.0"))
                    throw org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.read ($in);
                else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                    throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_EP_IRP_operations_profile (iRPVersion        );
            } finally {
                _releaseReply ($in);
            }
  } // get_EP_IRP_operations_profile


  /**
      * Return the list of all supported notifications and their supported
      * parameters for a specific EPIRP version.
      */
  public org.omg.ManagedGenericIRPConstDefs.Method[] get_EP_IRP_notification_profile (String iRPVersion) throws GetEPIRPNotificationProfile, org.omg.ManagedGenericIRPSystem.OperationNotSupported, org.omg.ManagedGenericIRPSystem.InvalidParameter
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_EP_IRP_notification_profile", true);
                org.omg.ManagedGenericIRPConstDefs.VersionNumberHelper.write ($out, iRPVersion);
                $in = _invoke ($out);
                org.omg.ManagedGenericIRPConstDefs.Method $result[] = org.omg.ManagedGenericIRPConstDefs.MethodListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:3gppsa5.org/EPIRPSystem/GetEPIRPNotificationProfile:1.0"))
                    throw GetEPIRPNotificationProfileHelper.read ($in);
                else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/OperationNotSupported:1.0"))
                    throw org.omg.ManagedGenericIRPSystem.OperationNotSupportedHelper.read ($in);
                else if (_id.equals ("IDL:3gppsa5.org/ManagedGenericIRPSystem/InvalidParameter:1.0"))
                    throw org.omg.ManagedGenericIRPSystem.InvalidParameterHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_EP_IRP_notification_profile (iRPVersion        );
            } finally {
                _releaseReply ($in);
            }
  } // get_EP_IRP_notification_profile

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:3gppsa5.org/EPIRPSystem/EPIRP:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _EPIRPStub
